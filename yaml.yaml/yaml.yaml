# http://dev.stephendiehl.com/fun/003_lambda_calculus.html#let

# the yaml.yaml interpreter written in yaml.yaml
# compare this to how lisp interpreters are written in themselves

# this homomorphism to lambda calculus proves that
# yaml.yaml is a turing complete language
# and, given that you like what you read,
# also very terse as a general-purpose
# functional programming language

- Y
- ? f:
  : scalar: variable
    sequence:
      f:
        mapping:
          - sequence
          - index: key
          # plus ~ to itself?
    # ((λk0.λk1...(~)) v0 v1 ...)
    mapping:
      - ? key:
          value:
        : abstraction:
            x:
              key:
              - scalar: variable
                sequence: TODO
                mapping:
                  - key:
                    value:
              # TODO case key ~
              - f: key
            term:
              # TODO case value ~
              - f: value
